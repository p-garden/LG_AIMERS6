# -*- coding: utf-8 -*-
"""H2O.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KYxSmmSe7JMmz3kA4rdX9nhnhNnvktz9
"""

from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/AIMERS/

pip install h2o

import h2o
from h2o.automl import H2OAutoML
import pandas as pd

# 📌 H2O 초기화
h2o.init()

# 📌 데이터 로드
train = pd.read_csv("data/train.csv")
test = pd.read_csv("data/test.csv")

# 🔹 ID 컬럼 보존
test_id = test["ID"]

# 🔹 불필요한 열 제거
train = train.drop(columns=["ID"])
test = test.drop(columns=["ID"])

# 🔹 H2O 데이터 변환 (전처리는 H2O가 자동으로 처리)
train_h2o = h2o.H2OFrame(train)
test_h2o = h2o.H2OFrame(test)

# 🔹 AutoML 모델 학습
aml = H2OAutoML(max_runtime_secs=3600)  # 최대 1시간 학습
aml.train(x=[col for col in train.columns if col != "임신 성공 여부"], y="임신 성공 여부", training_frame=train_h2o)

# 📌 학습 로그 출력
print("\n🏆 [H2O AutoML 리더보드]")
leaderboard = aml.leaderboard.as_data_frame()
print(leaderboard)

# 📌 모델 저장
model_path = h2o.save_model(model=aml.leader, path="h2o_best_model", force=True)
print(f"\n💾 [최적 모델 저장 완료] 경로: {model_path}")

# 예측
preds = aml.leader.predict(test_h2o).as_data_frame().values[:, 0]

# `predict_proba`의 반환값이 DataFrame인지 NumPy 배열인지 확인 후 처리
if isinstance(preds, pd.DataFrame):
    preds = preds.iloc[:, 1]  # DataFrame이면 iloc 사용
else:
    preds = preds[:, 1]  # NumPy 배열이면 일반 인덱싱 사용

# 📌 결과 저장 (ID 컬럼 포함)
submission = pd.DataFrame({"ID": test["ID"], "probability": preds})

submission.to_csv("submission_h2o.csv", index=False, encoding="cp949")
print("\n✅ [결과 저장 완료] 파일: submission_h2o.csv")

# 📌 H2O 종료
h2o.shutdown(prompt=False)
print("\n🚀 [H2O 세션 종료 완료]")

from google.colab import files
files.download("submission_h2o.csv")



import h2o
from h2o.automl import H2OAutoML
import pandas as pd
from sklearn.model_selection import train_test_split

# H2O 초기화
h2o.init()

# 데이터 로드 및 전처리
df = pd.read_csv("data/train.csv").drop(columns=["ID"])
df = df.fillna(0)  # 결측값 처리
df = pd.get_dummies(df)  # 원-핫 인코딩

# 데이터 분할
X_train, X_test, y_train, y_test = train_test_split(df.drop(columns=["임신 성공 여부"]), df["임신 성공 여부"], test_size=0.2, random_state=42)


# H2O 데이터 변환
train_h2o = h2o.H2OFrame(pd.concat([X_train, y_train], axis=1))
test_h2o = h2o.H2OFrame(X_test)

# AutoML 모델 학습
aml = H2OAutoML(max_runtime_secs=3600)  # 최대 1시간 학습
aml.train(x=X_train.columns.tolist(), y="임신 성공 여부", training_frame=train_h2o)

# 예측 및 저장
preds = aml.leader.predict(test_h2o).as_data_frame().values[:, 0]
submission = pd.DataFrame({"ID": range(len(preds)), "임신 성공 여부": preds})
submission.to_csv("submission_h2o.csv", index=False)

print("✅ H2O AutoML 완료!")
h2o.shutdown(prompt=False)